name: CI

on:
  push:
    branches:
    - master
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 5
      matrix:
        python-version: [ 3.6, 3.7, 3.8 ]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Add conda to system path
      run: |
        # $CONDA is an environment variable pointing to the root of the miniconda directory
        echo $CONDA/bin >> $GITHUB_PATH
    - name: Install dependencies
      run: |
        conda env update --file environment.yml --name base
        conda install pytest codecov pytest-cov tox flake8 -c conda-forge
        pip -m pip install --upgrade pip
        pip install --user -r requirements.txt
    - name: Lint with flake8
      run: |
        flake8 . --count --max-complexity=10 --max-line-length=99 --statistics
    - name: Run Tox
      run: |
        tox -e py
    - name: Cache conda
        uses: actions/cache@v2
        env:
          # Increase this value to reset cache if etc/example-environment.yml has not changed
          CACHE_NUMBER: 0
        with:
          path: ~/conda_pkgs_dir
          key:
            ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-${{
            hashFiles('etc/environment.yml') }}
          - uses: conda-incubator/setup-miniconda@v2
            with:
              activate-environment: anaconda-client-env
              channel-priority: strict
              environment-file: etc/environment.yml
              use-only-tar-bz2: true
#    - name: Upload pytest test results
#      uses: actions/upload-artifact@v2
#      with:
#        name: pytest-results
#        path: junit/test-results-${{ matrix.python-version }}.xml
#      # Use always() to always run this step to publish test results when there are test failures
#      if: ${{ always() }}